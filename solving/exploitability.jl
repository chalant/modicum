module exploitability

export computeexploitability!

using StaticArrays

using bestresponse
using infosets
using games


function computeexploitability!(::Type{T}, gs::G, h::H, ica::C) where {A, C<:ChanceAction, T<:AbstractFloat, S<:GameSetup, G<:AbstractGameState{A, S, 2}, H<:History}
    init_reach = @SVector T[1, 1, 1]

    ev = 0

    #compute best response values
    for pl in players!(gs)
        ev += bestresponse!(
            gs, h, ica, 
            pl,
            init_reach)
    end

    return ev

    # ev = T(0)

    # compute expected value for playing against a strategy for
    # each player
    # for pl in players!(gs)
    #     ev += expectedvalue!(
    #         gs, h, 
    #         br_h, pl, 
    #         ica, 
    #         ist,
    #         init_reach)
    # end

end

end